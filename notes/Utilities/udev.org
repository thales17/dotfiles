#+title: udev Notes
<2022-08-03 Wed>
* Resources
- [[https://man.archlinux.org/man/udev.7][man page: udev(7)]]
- [[https://www.linux.com/news/udev-introduction-device-management-modern-linux-system/][linux.com: Udev: Introduction to Device Management In Modern Linux System]]
- [[https://www.thegeekdiary.com/beginners-guide-to-udev-in-linux/][thegeekdiary.com: Beginners Guide to Udev in Linux]]
- [[https://wiki.archlinux.org/title/Udev][ArchWiki: udev]]
- [[https://hackaday.com/2009/09/18/how-to-write-udev-rules/][hackaday: How to Write udev Rules]]
- [[https://rfc1149.net/blog/2013/03/05/what-is-the-difference-between-devttyusbx-and-devttyacmx/][rfc1149.net: What is the difference between /dev/ttyUSB and /dev/ttyACM?]]

* Getting Info About a Device
- To see info about =/dev/foo= run =udevadm info /dev/foo=

* Rules
** Naming Rules
- They must have the file extension =.rules=
- The files must be prefixed with a two digit number
- The number specifies the order that the rule will be applied
- Typically user rules are between 61 and less than 99

** Locations
- udev rules reside in the =/etc/udev/rules.d= folder
- Packages include udev rules and are in =/usr/lib/udev/rules.d=
- The rules inside =/etc= take precedence over the =/usr/lib= rules

** Example USB TTY Rule
- This example rule should set a USB TTY device that matches the vendor ID and product ID to have the permissions =0666= or read and write for all users
- This rule could be named =61-usb-serial-read-write.rules=
#+begin_src text
SUBSYSTEM=="tty", ATTRS{idVendor}=="dead", ATTRS{idProduct}=="beef", MODE="0666"
#+end_src

** Testing Rules
- If you want to test newly created rules before applying them you can use =udevadm test=
- You will need to use the =/devices/= path of the device to test the rules
- For example, =sudo udevadm test /devices/pci0000:00/0000:00:14.0/usb3/3-6/3-6:1.0/ttyUSB0/tty/ttyUSB0=

** Reloading Rules
- To reload the current rules run =sudo udevadm control --reload-rules= then =sudo udevadm trigger=
