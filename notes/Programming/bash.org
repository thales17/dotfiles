#+title: Bash Notes

<2022-05-01 Sun>
* Functions
- The function syntax is similar to C but arguments and return types are not specified
#+begin_src bash
example_function () {
    echo "Function Begin"
    ls -l
    echo "Function End"
}
#+end_src
- To reference an argument use =$NUM= starting at 1
#+begin_src bash
example_function () {
    echo "Argument: $1"
}

example_function "Ohh yeah"
#+end_src

- To return a value use the =return= command
- To access the return value of the previous run function use =$?=
#+begin_src bash
example_function () {
    return 100
}

example_function
echo $?
#+end_src

* For Loop
#+begin_src bash
for (( i=0; i<=10; i++ ))
do
    echo $i
done
#+end_src

* Looping over Arrays
#+begin_src bash
arr=(abc def ghi jkl)
for x in "${arr[@]}"
do
    echo $x
done
#+end_src

* Check If File Exists
#+begin_src bash
if [ -f foo.txt ];
then
    echo "foo.txt exists"
else
    echo "foo.txt does not exist"
fi
#+end_src

- The =-f= flag checks for a file
- The =-d= flag checks for a directory
- The =-e= flag checks for either files or directories
